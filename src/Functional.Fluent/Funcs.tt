<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ include file="Core.tt"  #>

using System;

namespace Functional.Fluent
{
	public static partial class Funcs
    {

	public static Func<Unit> ToUnit(this Action v) => () => { v(); return new Unit(); };


	<# for (int i = 1; i <= 10; ++i)
	{
	#>
    
	
	public static FuncState<<#= ListTypes(i) #>> Get<<#= ListTypes(i) #>>(<#= ListParameters(i - 1) #>) => new FuncState<<#= ListTypes(i) #>>(<#= ListArguments(i - 1) #>);
	

	<#
    }
	#>

	<# for (int i = 1; i <= 10; ++i)
	{
	#>
    
	
	public static Func<<#= ListTypes(i) #>, Unit> ToUnit<<#= ListTypes(i) #>>(this Action<<#= ListTypes(i) #>> v) => (<#= ListArguments(i) #>) => { v(<#= ListArguments(i) #>); return new Unit(); };


	<#
    }
	#>

	}
}