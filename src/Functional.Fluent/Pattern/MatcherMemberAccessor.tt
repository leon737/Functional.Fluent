<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ include file="../Core.tt"  #>

using System;
using System.Linq.Expressions;

namespace Functional.Fluent.Pattern
{
	public partial class MatcherMemberAccessor<TV, TC, TM>
    {
	
	<# for (int i = 2; i <= 11; ++i)
	{
	#>
			

        public  MatcherMemberAccessor<TV, TC, TM> Member(<# for (int j = 0; j < i; ++j) { Write(j > 0 ? ", " : ""); #> TV value<#= j  #><# } #>, Expression<Func<TC, TM>> expression)
        {
            Member(new[] { <# for (int j = 0; j < i; ++j) { Write(j > 0 ? ", " : ""); #> value<#= j  #><# } #> }, expression);
            return this;
        }
		

	<#
    }
	#>

	}

}